#### Embedded Platform Buildroot Repository ####

This version of buildroot is setup to generate full SD card images for a number
of platforms.The platforms supported can be found by reviewing the 
board/mathworks/<platform> directories.


The SD card generation system dynamically generates a buildroot configuration,
builds it and runs a number of post-processing scripts. The overall execution
is controlled via the build.sh script.

The build.sh script can be invoked with the following syntax:

./build.sh [options]<board_dir> <configname>

The format of configname is defined by the underlying board dir, but is generally:

<board>_<os>_<toolchain>

The specifics of the syntax can be found in each <board_dir>'s build.sh script

Some examples:
==============

Build the SoCFPGA platform for the SoCKit board running Linux with the Linaro
toolchain:

./build.sh board/mathworks/socfpga sockit_linux_linaro


Build the Zynq platform for the Zed board running Linux with the Xilinx
toolchain:

./build.sh board/mathworks/zynq zed_linux_xilinx

==========================
Buildroot is a simple, efficient and easy-to-use tool to generate embedded
Linux systems through cross-compilation.

The documentation can be found in docs/manual. You can generate a text
document with 'make manual-text' and read output/docs/manual/manual.text.
Online documentation can be found at http://buildroot.org/docs.html

To build and use the buildroot stuff, do the following:

1) run 'make menuconfig'
2) select the target architecture and the packages you wish to compile
3) run 'make'
4) wait while it compiles
5) find the kernel, bootloader, root filesystem, etc. in output/images

You do not need to be root to build or run buildroot.  Have fun!

Buildroot comes with a basic configuration for a number of boards. Run
'make list-defconfigs' to view the list of provided configurations.

Please feed suggestions, bug reports, insults, and bribes back to the
buildroot mailing list: buildroot@buildroot.org
You can also find us on #buildroot on Freenode IRC.
