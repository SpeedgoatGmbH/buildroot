#!/bin/bash

SCRIPT_DIR=$( cd "$( dirname "$0" )" && pwd )
BOARD_DIR=$( cd "$( dirname "${SCRIPT_DIR}" )" && pwd )
BR_ROOT=$( cd "$( dirname "$( dirname "$( dirname "${BOARD_DIR}" )")")" && pwd )
CONFIG_DIR=${BOARD_DIR}/defconfig
COMMON_CONFIG=${CONFIG_DIR}/zynq_common.defconfig
OPERATING_SYS="linux"
TOOLCHAIN="xilinx"
BOARD="zc702"
BUILDALL="false"

# List of valid boards
BOARD_LIST="zc702 zc706 zed"
# List of valid os
OS_LIST="linux xenomai"
# List of valid toolchains
TC_LIST="linaro xilinx"

tolower() {
	ARG=${1}
	ARG="`echo $ARG | tr A-Z a-z`"
}

usage() {
	cat >&2 <<EOL
Generate the buildroot configuration
Usage:
genconfig command ...
commands:
	--board|-b BOARDNAME 	set the boardname (${BOARD_LIST})
	--os|-o					set the operating system (${OS_LIST})
	--toolchain|-t			set the toolchain (${TC_LIST})
	--all|-a				build board/os combinations
EOL
	exit 1
}


mkconfig() {
	if [ ${OPERATING_SYS} == "xenomai" ]; then
		TC="linaro"
		OS="xenomai"
	else
		TC=${TOOLCHAIN}
		OS="linux"
	fi
	BOARD_CONFIG=${CONFIG_DIR}/zynq_${BOARD}.defconfig
	OS_CONFIG=${CONFIG_DIR}/zynq_${OS}.defconfig
	TOOLCHAIN_CONFIG=${CONFIG_DIR}/zynq_${TC}.defconfig		
	DEFCONFIG_NAME=zynq_mw_${BOARD}_${OS}_${TC}_defconfig
	# Generate the defconfig
	
	echo "### Generating ${DEFCONFIG_NAME}"
	cat ${COMMON_CONFIG} > ${BR_ROOT}/configs/${DEFCONFIG_NAME}
	cat ${BOARD_CONFIG} >> ${BR_ROOT}/configs/${DEFCONFIG_NAME}
	cat ${TOOLCHAIN_CONFIG} >> ${BR_ROOT}/configs/${DEFCONFIG_NAME}
	cat ${OS_CONFIG} >> ${BR_ROOT}/configs/${DEFCONFIG_NAME}	
}

while [ "$1" != "" ] ; do
	CMD="$1"
	shift
	case "$CMD" in
	--board|-b)
		tolower "$1"
		BOARD=${ARG}
		shift
		;;
	--os|-o)
		tolower "$1"
		OPERATING_SYS=${ARG}
		shift
		;;
	--toolchain|-t)
		tolower "$1"
		TOOLCHAIN=${ARG}
		shift
		;;
	--all|-a)
		BUILDALL="true"
		;;
	-*)
		usage
		;;
	esac
done;

if [ ${BUILDALL} == "true" ]; then
	
	for brd in ${BOARD_LIST}; do
		for opsys in ${OS_LIST}; do
			BOARD=${brd}
			OPERATING_SYS=${opsys}
			#echo $BOARD
			#echo $XENOMAI
			mkconfig
		done
	done
	
else
	mkconfig
fi



